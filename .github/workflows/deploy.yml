name: Deploy to Ubuntu Server

on:
  push:
    branches:
      - main  # Запускать workflow при push на ветку main

jobs:
  deploy:
    runs-on: ubuntu-latest  # Использовать последний доступный образ Ubuntu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Проверить репозиторий на машину сборки

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'  # Установить JDK 17 от Temurin
          java-version: '17'

      - name: Set environment variables
        run: |
          echo "DB_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV  # Установить переменные окружения из секретов GitHub

      - name: Debug environment variables
        run: printenv  # Вывести все переменные окружения для отладки

      - name: Copy repository to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: '.'  # Копируем весь репозиторий
          target: '/home/xyl1gan4eg/myJavaProjects/weatherProject'  # Указать целевой путь на сервере
          port: 22
          timeout: 30s
          command_timeout: 10m
          use_insecure_cipher: false
          rm: false
          debug: false
          strip_components: 1
          overwrite: true
          tar_dereference: false
          tar_exec: tar
          proxy_port: 22
          proxy_timeout: 30s
          proxy_use_insecure_cipher: false  # Настройки для scp-action, чтобы копировать файл на удаленный сервер

      - name: SSH into server and compile userService
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/xyl1gan4eg/myJavaProjects/weatherProject/userService
            mvn clean package

      - name: SSH into server and compile weatherApiService
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/xyl1gan4eg/myJavaProjects/weatherProject/weatherApiService
            mvn clean package

      - name: SSH into server and restart userService
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Checking for JAR file..."
            if [ -f /home/xyl1gan4eg/myJavaProjects/weatherProject/userService/target/userService-0.0.1-SNAPSHOT.jar ]; then
              echo "JAR file found. Proceeding with service restart."
              if sudo systemctl is-active --quiet user-service; then
                sudo systemctl stop user-service
              fi
              sudo cp /home/xyl1gan4eg/myJavaProjects/weatherProject/userService/target/userService-0.0.1-SNAPSHOT.jar /opt/userService/
              sudo systemctl start user-service
            else
              echo "JAR file not found!"
              exit 1
            fi

      - name: SSH into server and restart weatherApiService
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Checking for JAR file..."
            if [ -f /home/xyl1gan4eg/myJavaProjects/weatherProject/weatherApiService/target/weatherApiService-0.0.1-SNAPSHOT.jar ]; then
              echo "JAR file found. Proceeding with service restart."
              if sudo systemctl is-active --quiet weather-api-service; then
                sudo systemctl stop weather-api-service
              fi
              sudo cp /home/xyl1gan4eg/myJavaProjects/weatherProject/weatherApiService/target/weatherApiService-0.0.1-SNAPSHOT.jar /opt/weatherApiService/
              sudo systemctl start weather-api-service
            else
              echo "JAR file not found!"
              exit 1
            fi

      - name: List files on server for debug
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Listing files in /home/xyl1gan4eg/myJavaProjects/weatherProject/"
            ls -la /home/xyl1gan4eg/myJavaProjects/weatherProject/  # Показать список файлов в целевой папке для отладки
