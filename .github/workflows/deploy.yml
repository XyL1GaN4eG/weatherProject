name: Deploy to Ubuntu Server

on:
  push:
    branches:
      - main  # Запускать workflow при push на ветку main

jobs:
  deploy:
    runs-on: ubuntu-latest  # Использовать последний доступный образ Ubuntu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Проверить репозиторий на машину сборки

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'  # Установить JDK 17 от Temurin
          java-version: '17'

      - name: Set environment variables
        run: |
          echo "DB_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV  # Установить переменные окружения из секретов GitHub

      - name: Debug environment variables
        run: printenv  # Вывести все переменные окружения для отладки

      - name: Discover and build microservices
        run: |
          for dir in $(find weatherProject -mindepth 1 -maxdepth 1 -type d); do
            echo "Building microservice in $dir"
            mvn -e -B package --file $dir/pom.xml
          done

      - name: List built files for all microservices
        run: |
          for dir in $(find weatherProject -mindepth 1 -maxdepth 1 -type d); do
            echo "Listing files in $dir/target"
            ls -la $dir/target
          done

      - name: Deploy microservices to Server
        run: |
          for dir in $(find weatherProject -mindepth 1 -maxdepth 1 -type d); do
            service_name=$(basename $dir)
            scp -i ${{ secrets.SSH_PRIVATE_KEY }} -o StrictHostKeyChecking=no $dir/target/*.jar ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/home/xyl1gan4eg/myJavaProjects/weatherProject/$service_name/
          done

      - name: SSH into server and restart microservices
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            for dir in $(find /home/xyl1gan4eg/myJavaProjects/weatherProject -mindepth 1 -maxdepth 1 -type d); do
              service_name=$(basename $dir)
              echo "Checking for JAR file in $dir"
              jar_file=$(ls $dir/target/*.jar 2> /dev/null)
              if [ -n "$jar_file" ]; then
                echo "JAR file found for $service_name. Proceeding with service restart."
                if sudo systemctl is-active --quiet $service_name; then
                  sudo systemctl stop $service_name
                fi
                sudo cp $jar_file /opt/$service_name/
                sudo systemctl start $service_name
              else
                echo "No JAR file found for $service_name!"
                exit 1
              fi
            done

      - name: List files on server for debug
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            for dir in $(find /home/xyl1gan4eg/myJavaProjects/weatherProject -mindepth 1 -maxdepth 1 -type d); do
              echo "Listing files in $dir"
              ls -la $dir
            done
